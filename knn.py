# -*- coding: utf-8 -*-
"""knn

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kOQLzl6QSoelS9I4ZmTWelmWNNQY7qp7
"""

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier

#make a function wala prohram and tape chipkana h keyguard k nich taki chipak jae
def func(kvalue,testpcs,datasetname):
  iris_data=load_iris()   # extracting data into a variable
  features=iris_data.data  #storing data in a features variable
  labels=iris_data.target # storing the targets (answers) in labels variable
  traindata,testdata,trainlabel,testlabel=train_test_split(features,labels,test_size=testpcs)
  kcfl=KNeighborsClassifier(n_neighbors=kvalue)
  trained=kcfl.fit(traindata,trainlabel)
  clf=DecisionTreeClassifier()
  dtrained=clf.fit(traindata,trainlabel)
  if datasetname=="classifier":
    dpredict=dtrained.predict(testdata)
    accuracy_score(dpredict,testlabel)
  else:
    predicted_op=trained.predict(testdata)
    accuracy_score(predicted_op,testlabel)

kvalue=int(input("Enter k value: "))
testpcs=float(input("Enter test percentage: "))
datasetname=input("Enter the dataset name classifier or regression")
func(kvalue,testpcs,datasetname)

from sklearn.datasets import load_iris   # to import iris data from sklearn
iris_data=load_iris()   # extracting data into a variable
dir(iris_data)

features=iris_data.data  #storing data in a features variable
labels=iris_data.target # storing the targets (answers) in labels variable

import matplotlib.pylab as plt

#code for graph

#separating data into training and testing
from sklearn.model_selection import train_test_split
traindata,testdata,trainlabel,testlabel=train_test_split(features,labels,test_size=0.2)

#import knn classifier, call it,and trined it
from sklearn.neighbors import KNeighborsClassifier
kcfl=KNeighborsClassifier(n_neighbors=5)
trained=kcfl.fit(traindata,trainlabel)

# Time for prediction and check accuracy
predicted_op=trained.predict(testdata)
from sklearn.metrics import accuracy_score
accuracy_score(predicted_op,testlabel)

#calling ddecision tree classifier
from sklearn.tree import DecisionTreeClassifier
clf=DecisionTreeClassifier()
dtrained=clf.fit(traindata,trainlabel)

dpredict=dtrained.predict(testdata)
accuracy_score(dpredict,testlabel)

# compare decision tree and knn
import matplotlib.pyplot as plt

"""#new"""

from sklearn.datasets import load_digits
digit_data=load_digits()
dir(digit_data)

digit_data.target_names

features=digit_data.data
label=digit_data.target     #question is what are  the sttribe to identify

images=digit_data.images

import matplotlib.pyplot as plt
plt.imshow(images[9])

